Template engine -- jinja2 syntax to support:

Template evaluation:
[x] {{ variable }} replaces content in variable
[x] {{ variable.something.child }} replaces content in variable child
[x] {{ variable.isoformat() }} implements date isoformat
[x] {{ variable.strftime("%Y, %B %d") }} implements date strftime
[x] {{ variable.something|striptags }} implements striptags
    => let's just bypass it for now, none of my articles have HTML on them
[x] {{ lang_display_name(translation.lang) }}
[x] If: {% if article.something %} {% else %} {% endif %}
[x] For: {% for it1 in LIST %} {% endfor %}
[x] Nested for: {% for li in LIST_of_lists %}{% for x in li}{{ x}}{% endfor %}{% endfor %}
[x] refactor: use json.Value and json.Object instead of custom Value and Context types
[x] Add remaining if conditions
    [x] {% if page is defined and url == page.url %}
    [x] {% if article.content != article._summary %}
    [x] {% if page is defined and it.url == page.url %}
[ ] set: {% set rel_source_path = 'site/' + article.source_path.split('/site/')[1] %}
    best to ignore the set command and set this in sitegen
Template loading:
[x] Includes: {% include 'FILENAME' %}
    [x] support nested includes
[x] Blocks: {% block NAME %}  {% endblock %}
[x] Extends: {% extends "FILENAME" %}


Useful shell commands
---------------------

Find all expressions:
rg -o '[{][{][^{]*[}]' mytheme/ | cut -d: -f2 | sort | uniq

Find all commands:
rg -o '[{][%][^{]*[}]' mytheme/ | cut -d: -f2 | sort | uniq

Find all variables:
rg -o '[{][{%][^{]*[}]' mytheme/ | cut -d: -f2 | sort | uniq | grep -v include | grep -v extends | grep -v block | grep -v endfor | grep -v endif | grep -v else

Site generator
##############

main logic:
-----------
[x] build global context
[x] articles := sort articles in site/blog/* by date
[x] setup template env to load any template
[x] for each article, in date desc order:
[x]     load article metadata and MD source
[x]     render article content from MD to HTML
    [x] fix missing GH syntax
    [.] fix image MD syntax inside <center> tag
        found a WORKAROUND: add blank line after <center> tag
            => this breaks in Pelican though
[x]     create local context
[x]     render into HTML content using the Jinja template
    [x] fix bug expression inside child block w/ double {{{{
    [x] fix bug dates incorrect format and TZ
    [x] add relative source path variable
    [ ] add highlightjs to replace pygments: https://highlightjs.org/
[ ] generate index page
[ ]     generate summary for every article
[ ]     update feed files (better than requiring memory everytime)
[ ]     save to output file
[ ]         create dir output tree as needed
[ ] generate pages w/ similar logic, except no feed
----------------------

[x] Copy site/images/ OUTPUT_DIR/images/
[x] Copy theme static files ./mytheme/static/*/** to OUTPUT_DIR/theme/*/**
[x] Copy CNAME file

[ ] Content feeds for aggregators
    [ ] RSS
    [ ] Atom
[ ] implement translations: should group articles w/ same slug

[ ] implement proper relative urls, for better local preview

TODO before deploying:
[ ] apply WORKAROUND for <center> tag wrapping images (see above)
